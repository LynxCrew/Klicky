[delayed_gcode _CHECK_KLICKY_VARIABLES_VERSION]
initial_duration: 0.5
gcode:
        {% set version = printer['gcode_macro _KLICKY_VARIABLES'].version %}
        {% if version is not defined or version|int != 1 %}
            {action_emergency_stop("Wrong Version of klicky_variables.cfg, please update!")}
        {% endif %}
    
    {% set version = printer['gcode_macro _PARK_VARIABLES'].version %}
        {% if version is not defined or version|int != 1 %}
            {action_emergency_stop("Wrong Version of park_variables.cfg, please update!")}
        {% endif %}

        {% set version = printer['gcode_macro _HOMING_VARIABLES'].version %}
        {% if version is not defined or version|int != 1 %}
            {action_emergency_stop("Wrong Version of homing_variables.cfg, please update!")}
        {% endif %}

        {% set version = printer['gcode_macro _PROBE_VARIABLES'].version %}
        {% if version is not defined or version|int != 1 %}
            {action_emergency_stop("Wrong Version of probe_variables.cfg, please update!")}
        {% endif %}

        {% set version = printer['gcode_macro _BED_MESH_VARIABLES'].version %}
        {% if version is not defined or version|int != 1 %}
            {action_emergency_stop("Wrong Version of bed_mesh_variables.cfg, please update!")}
        {% endif %}
    

[gcode_macro KLICKY_RESET_STATES]
gcode:
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_state VALUE={ True }
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_attached VALUE={ False }
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=docking_locked VALUE={ False }
    SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=attaching_locked VALUE={ False }


[gcode_macro _CHECK_PROBE]
gcode:
    Query_Probe
    _SetProbeState action={ params.ACTION }

[gcode_macro _SetProbeState]
gcode:
    __SetProbeState action={ params.ACTION }

# Due to how templates are evaluated, we have query endstops in one
# macro and call another macro to make decisions based on the result
[gcode_macro __SetProbeState]
gcode:
    {% set query_probe_triggered = printer.probe.last_query %}
    {% set action    = params.ACTION|default('') %}
    {% set state = params.STATE|default('') %}
        
    # If triggered (true), probe not attached
    {% if query_probe_triggered %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_attached VALUE={ False }
    {% else %}
    # If not triggered (false), probe attached
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_attached VALUE={ True }
    {% endif %}

    {% if action == 'query' %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=probe_state VALUE={query_probe_triggered}
    {% endif %}

    # If probe fails to attach/detach

    # If not docked
    {% if not query_probe_triggered and action == 'dock' %}
        {action_emergency_stop("Probe dock failed!")}
    {% endif %}
    {% if not query_probe_triggered and state == 'docked' %}
        {action_emergency_stop("Probe not docked!")}
    {% endif %}

    # If not attached
    {% if query_probe_triggered and action == 'attach' %}
        {action_emergency_stop("Probe attach failed!")}
    {% endif %}
    {% if query_probe_triggered and state == 'attached' %}
        {action_emergency_stop("Probe not attached!")}
    {% endif %}

[gcode_macro _Move_To_Dock]
gcode:
    {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
    {% set status_before = printer['gcode_macro _HOMING_STATUS'].z|int %}
    {% if status_before == 0 %}
        SET_KINEMATIC_POSITION Z=0
    {% elif status_before == 2 %}
        MARK_AS_HOMED AXES=Z
    {% endif %}
    {% if printer.toolhead.position.z|float < printer["gcode_macro _KLICKY_VARIABLES"].zhop|float %}
        {% set VERBOSE = printer['gcode_macro _HOMING_VARIABLES'].zhop_verbose|default('low') %}
        {% if printer['gcode_macro _HOMING_VARIABLES'].zhop_run_current is defined %}
            SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer['gcode_macro _HOMING_VARIABLES'].zhop_run_current}
            {% for i in range(1, 99) %}
                {% if printer['stepper_z' ~ i] is defined %}
                    SET_TMC_CURRENT STEPPER={'stepper_z' ~ i} CURRENT={printer['gcode_macro _HOMING_VARIABLES'].zhop_run_current} HOME_CURRENT={printer['gcode_macro _HOMING_VARIABLES'].zhop_run_current} VERBOSE={VERBOSE}
                {% else %}
                    {% break %}
                {% endif %}
            {% endfor %}
        {% endif %}

        G90
        G0 Z{printer["gcode_macro _KLICKY_VARIABLES"].zhop}
            
        {% if printer['gcode_macro _HOMING_VARIABLES'].zhop_run_current is defined %}
            SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer[printer['gcode_macro _HOMING_VARIABLES'].driver_type ~ ' stepper_z'].run_current}
            {% for i in range(1, 99) %}
                {% if printer['stepper_z' ~ i] is defined %}
                    SET_TMC_CURRENT STEPPER={'stepper_z' ~ i} CURRENT={printer[printer['gcode_macro _HOMING_VARIABLES'].driver_type ~ ' stepper_z' ~ i].run_current} HOME_CURRENT={printer[printer['gcode_macro _HOMING_VARIABLES'].driver_type ~ ' stepper_z' ~ i].run_current} VERBOSE={VERBOSE}
                {% else %}
                    {% break %}
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endif %}
    {% if not HOMING_MOVE and status_before != 1 %}
        MARK_AS_UNHOMED AXES=Z
    {% endif %}
        
    G90

    G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_first[0]} Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_first[1]} F5000
    G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_second[0]} Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_second[1]} F2500
    G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[0]} Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[1]} F1000
        
    G4 P100


[gcode_macro ATTACH_PROBE]
variable_front_end_hints: {
    'params': {
            'RETURN_TO_POSITION': {
                'type': 'checkbox',
                'options': ('TRUE', 'FALSE'),
                'default': 'TRUE'
            },

            'FORCE_ATTACH': {
                'type': 'checkbox',
                'options': ('TRUE', 'FALSE'),
                'default': 'FALSE'
            },
        }
    }
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|boolean %}
    {% set FORCE_ATTACH = params.FORCE_ATTACH|default('FALSE')|boolean %}
    _CHECK_PROBE action=query
    _ATTACH_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_ATTACH={FORCE_ATTACH}

[gcode_macro _ATTACH_PROBE]
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|boolean %}
    {% set FORCE_ATTACH = params.FORCE_ATTACH|default('FALSE')|boolean %}
    {% if not printer["gcode_macro _KLICKY_DATABASE"].attaching_locked %}
        {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_ATTACH %}
            G28 X0 Y0
            __ATTACH_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_ATTACH={FORCE_ATTACH}
        {% else %}
            RESPOND MSG="Probe already attached" COLOR=warning
        {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro __ATTACH_PROBE]
gcode:
    {% if not printer["gcode_macro _KLICKY_DATABASE"].attaching_locked %}
        {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|boolean %}
        {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
        {% set FORCE_ATTACH = params.FORCE_ATTACH|default('FALSE')|boolean %}
        {% if RETURN_TO_POSITION %}
            {% set X = printer.toolhead.position.x %}
            {% set Y = printer.toolhead.position.y %}
        {% endif %}

        _CHECK_PROBE action=query

        ___ATTACH_PROBE FORCE_ATTACH={FORCE_ATTACH} HOMING_MOVE={HOMING_MOVE}

        {% if printer["gcode_macro _KLICKY_VARIABLES"].retries is not defined or printer["gcode_macro _KLICKY_VARIABLES"].retries < 1 %}
            _CHECK_PROBE action=attach
        {% else %}
            _CHECK_PROBE action=query

            _RETRY_ATTACH HOMING_MOVE={HOMING_MOVE}
        {% endif %}

        {% if RETURN_TO_POSITION %}
            {% if X > printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[0] + printer["gcode_macro _KLICKY_VARIABLES"].dock_area[0]
               or X < printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[0] - printer["gcode_macro _KLICKY_VARIABLES"].dock_area[0]
               or Y > printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[1] + printer["gcode_macro _KLICKY_VARIABLES"].dock_area[1]
               or Y < printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[1] - printer["gcode_macro _KLICKY_VARIABLES"].dock_area[1]
            %}
                G0 X{X} Y{Y} F5000
            {% endif %}
        {% endif %}
    {% else %}
            RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro _RETRY_ATTACH]
gcode:
    {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
        {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
        RESPOND MSG="Probe attach failed!" color=error
        {% set retries = printer["gcode_macro _KLICKY_VARIABLES"].retries %}
        {% for i in range(retries) %}
            __RETRY_ATTACH I={i} RETRIES={retries} HOMING_MOVE={HOMING_MOVE}
            {% if i < retries - 1 %}
                _CHECK_PROBE action=query
            {% else %}
                _CHECK_PROBE action=attach
            {% endif %}
        {% endfor %}
    {% endif %}

[gcode_macro __RETRY_ATTACH]
gcode:
    {% set i = params.I|default(0)|int %}
    {% set retries = params.RETRIES|default(0)|int %}
    {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
        {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
        RESPOND MSG="Retry {i + 1}/{retries}" color=error

        ___DOCK_PROBE FORCE_DOCK=TRUE HOMING_MOVE={HOMING_MOVE}
        ___ATTACH_PROBE FORCE_ATTACH=TRUE HOMING_MOVE={HOMING_MOVE}
    {% endif %}

[gcode_macro ___ATTACH_PROBE]
gcode:
    {% set FORCE_ATTACH = params.FORCE_ATTACH|default('False')|boolean %}
    {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
    {% if not printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_ATTACH %}
        _Move_To_Dock HOMING_MOVE={HOMING_MOVE}
        {% set order = printer["gcode_macro _KLICKY_VARIABLES"].attach_probe_order.split(',') %}

        {% if order[0]|upper == 'X' %}
                G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
        {% else %}
                G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
        {% endif %}

        {% if order[1]|upper == 'X' %}
                G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
        {% else %}
                G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
        {% endif %}
    {% else %}
        RESPOND MSG="Probe already attached" COLOR=warning
    {% endif %}


[gcode_macro DOCK_PROBE]
variable_front_end_hints: {
    'params': {
            'RETURN_TO_POSITION': {
                'type': 'checkbox',
                'options': ('TRUE', 'FALSE'),
                'default': 'TRUE'
            },

            'FORCE_ATTACH': {
                'type': 'checkbox',
                'options': ('TRUE', 'FALSE'),
                'default': 'FALSE'
            },
        }
    }
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|boolean %}
    {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|boolean %}
    _CHECK_PROBE action=query
    _DOCK_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_DOCK={FORCE_DOCK}

[gcode_macro _DOCK_PROBE]
gcode:
    {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|boolean %}
    {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|boolean %}
    {% if not printer["gcode_macro _KLICKY_DATABASE"].docking_locked %}
        {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_DOCK %}
            G28 X0 Y0
            __DOCK_PROBE RETURN_TO_POSITION={RETURN_TO_POSITION} FORCE_DOCK={FORCE_DOCK}
        {% else %}
            RESPOND MSG="Probe already docked" COLOR=warning
        {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro __DOCK_PROBE]
gcode:
    {% if not printer["gcode_macro _KLICKY_DATABASE"].docking_locked %}
        {% set RETURN_TO_POSITION = params.RETURN_TO_POSITION|default('TRUE')|boolean %}
        {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
        {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|boolean %}
        {% if RETURN_TO_POSITION %}
            {% set X = printer.toolhead.position.x %}
            {% set Y = printer.toolhead.position.y %}
        {% endif %}

        _CHECK_PROBE action=query

        ___DOCK_PROBE FORCE_DOCK={FORCE_DOCK} HOMING_MOVE={HOMING_MOVE}
                
        {% if printer["gcode_macro _KLICKY_VARIABLES"].retries is not defined or printer["gcode_macro _KLICKY_VARIABLES"].retries < 1 %}
            _CHECK_PROBE action=dock
        {% else %}
            _CHECK_PROBE action=query

            _RETRY_DOCK HOMING_MOVE={HOMING_MOVE}
        {% endif %}

        {% if RETURN_TO_POSITION %}
            {% if X > printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[0] + printer["gcode_macro _KLICKY_VARIABLES"].dock_area[0]
               or X < printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[0] - printer["gcode_macro _KLICKY_VARIABLES"].dock_area[0]
               or Y > printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[1] + printer["gcode_macro _KLICKY_VARIABLES"].dock_area[1]
               or Y < printer["gcode_macro _KLICKY_VARIABLES"].dock_position_final[1] - printer["gcode_macro _KLICKY_VARIABLES"].dock_area[1]
            %}
                G0 X{X} Y{Y} F5000
            {% endif %}
        {% endif %}
    {% else %}
        RESPOND MSG="Probe locked" COLOR=warning
    {% endif %}

[gcode_macro _RETRY_DOCK]
gcode:
    {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
        {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
        RESPOND MSG="Probe dock failed!" color=error
        {% set retries = printer["gcode_macro _KLICKY_VARIABLES"].retries %}
        {% for i in range(retries) %}
            __RETRY_DOCK I={i} RETRIES={retries} HOMING_MOVE={HOMING_MOVE}
            {% if i < retries - 1 %}
                _CHECK_PROBE action=query
            {% else %}
                _CHECK_PROBE action=dock
            {% endif %}
        {% endfor %}
    {% endif %}

[gcode_macro __RETRY_DOCK]
gcode:
    {% set i = params.I|default(0)|int %}
    {% set retries = params.RETRIES|default(0)|int %}
    {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached %}
        {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
        RESPOND MSG="Retry {i + 1}/{retries}" color=error

        ___ATTACH_PROBE FORCE_ATTACH=TRUE HOMING_MOVE={HOMING_MOVE}
        ___DOCK_PROBE FORCE_DOCK=TRUE HOMING_MOVE={HOMING_MOVE}
    {% endif %}

[gcode_macro ___DOCK_PROBE]
gcode:
    {% set FORCE_DOCK = params.FORCE_DOCK|default('FALSE')|boolean %}
    {% set HOMING_MOVE = params.HOMING_MOVE|default('FALSE')|boolean %}
    {% if printer["gcode_macro _KLICKY_DATABASE"].probe_attached or FORCE_DOCK %}
        _Move_To_Dock HOMING_MOVE={HOMING_MOVE}
        {% set order = printer["gcode_macro _KLICKY_VARIABLES"].dock_probe_order.split(',') %}

        {% if order[0]|upper == 'X' %}
            G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
        {% else %}
            G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
        {% endif %}

        {% if order[1]|upper == 'X' %}
            G0 X{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[0]} F2500
        {% else %}
            G0 Y{printer["gcode_macro _KLICKY_VARIABLES"].dock_position_after[1]} F2500
        {% endif %}
    {% else %}
        RESPOND MSG="Probe already docked" COLOR=warning
    {% endif %}



[gcode_macro M401]
gcode:
    ATTACH_PROBE {rawparams}

[gcode_macro M402]
gcode:
    DOCK_PROBE {rawparams}


[gcode_macro LOCK_KLICKY_ATTACHING]
variable_value: 0
gcode:
    {% if params.VALUE is not defined %}
        {% if printer['gcode_macro LOCK_KLICKY_ATTACHING'].value|int == 0 %}
            {% set state = 1 %}
        {% else %}
            {% set state = 0 %}
        {% endif %}
    {% else %}
        {% set state = params.VALUE|int %}
    {% endif %}

    {% if state %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=attaching_locked VALUE={ True }
    {% else %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=attaching_locked VALUE={ False }
    {% endif %}

    # _SET_STATUS_LIGHT
        

    # Update the state of our variable.    This will inform Moonraker that
    # the device has changed its state.
    SET_GCODE_VARIABLE MACRO=LOCK_KLICKY_ATTACHING VARIABLE=value value={state}


[gcode_macro LOCK_KLICKY_DOCKING]
variable_value: 0
gcode:
    {% if params.VALUE is not defined %}
        {% if printer['gcode_macro LOCK_KLICKY_DOCKING'].value|int == 0 %}
            {% set state = 1 %}
        {% else %}
            {% set state = 0 %}
        {% endif %}
    {% else %}
        {% set state = params.VALUE|int %}
    {% endif %}

    {% if state %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=docking_locked VALUE={ True }
    {% else %}
        SET_GCODE_VARIABLE MACRO=_KLICKY_DATABASE VARIABLE=docking_locked VALUE={ False }
    {% endif %}

    # _SET_STATUS_LIGHT

    # Update the state of our variable.    This will inform Moonraker that
    # the device has changed its state.
    SET_GCODE_VARIABLE MACRO=LOCK_KLICKY_DOCKING VARIABLE=value value={state}


[gcode_macro LOCK_PROBE]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=1
    LOCK_KLICKY_DOCKING VALUE=1

[gcode_macro UNLOCK_PROBE]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=0
    LOCK_KLICKY_DOCKING VALUE=0

[gcode_macro LOCK_ATTACHING]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=1

[gcode_macro UNLOCK_ATTACHING]
gcode:
    LOCK_KLICKY_ATTACHING VALUE=0

[gcode_macro LOCK_DOCKING]
gcode:
    LOCK_KLICKY_DOCKING VALUE=1

[gcode_macro UNLOCK_DOCKING]
gcode:
    LOCK_KLICKY_DOCKING VALUE=0
